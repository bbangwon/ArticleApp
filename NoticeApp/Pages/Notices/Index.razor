@page "/Notices"
@page "/Notices/Index"

@inject INoticeRepository Repository
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-md-12">
        <a href="/Notices/Create" class="btn btn-primary">Create</a>
        <AuthorizeView>
            <Authorized>
            </Authorized>
            <NotAuthorized>
                <a href="/Notices/Manage" class="btn btn-primary">Manage</a>
            </NotAuthorized>
        </AuthorizeView>
        <AuthorizeView Roles="Administrators, Managers">
            <a href="/Notices/Manage" class="btn btn-primary">Manage</a>
        </AuthorizeView>
    </div>    
</div>

<div class="row">
    <div class="col-md-12">
        @if (models == null)
        {
            <div>
                <p>
                    <MatProgressBar Indeterminate="true"></MatProgressBar>
                </p>                
            </div>
        }
        else
        {
            <table class="table table-bordered table-hover">
                <thead class="thread-light">
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Created</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var m in models)
                    {
                        <tr>
                            <td>@m.Id</td>
                            <td @onclick="@(() => NameClick(m.Id))">
                                <a href="/Notices/Details/@m.Id">
                                    @m.Name
                                </a>
                            </td>
                            <td>@m.Created.ToShortTimeString()</td>
                            <td>
                                <a href="/Notices/Details/@m.Id" class="btn btn-light">Details</a>
                                <a href="/Notices/Edit/@m.Id" class="btn btn-light">Edit</a>
                                <a href="/Notices/Delete/@m.Id" class="btn btn-light">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>           
        }
    </div>
    <div class="col-md-12">
        <BWPager PagerModel="pagerModel" PageIndexChanged="OnPageIndexChanged"></BWPager>
    </div>
</div>

@code {
    private List<Notice> models;

    private BWPagerModel pagerModel = new BWPagerModel()
    {
        Size = 2,
        ButtonCount = 5
    };

    protected override async Task OnInitializedAsync()
    {
        if (Repository != null)
        {
            pagerModel.RecordCount = await Repository.GetTotalRecordsCountAsync();
        }
        LoadPages();
    }

    async void LoadPages()
    {
        if (Repository != null)
        {
            models = await Repository.GetPageAsync(pagerModel.Index, pagerModel.Size);
        }
        StateHasChanged();
    }

    void OnPageIndexChanged(int pageNumber)
    {
        LoadPages();
    }

    protected void NameClick(int id)
    {
        NavigationManager.NavigateTo($"/Notices/Details/{id}");
    }
}
